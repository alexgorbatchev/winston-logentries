// Generated by CoffeeScript 1.10.0
var Logentries, logentries, winston,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

winston = require('winston');

logentries = require('logentries');

Logentries = (function(superClass) {
  extend(Logentries, superClass);

  function Logentries(arg) {
    var level, levels, ref, ref1, secure, token;
    token = arg.token, level = arg.level, levels = (ref = arg.levels) != null ? ref : winston.levels, secure = (ref1 = arg.secure) != null ? ref1 : true;
    Logentries.__super__.constructor.apply(this, arguments);
    this.name = 'logentries';
    this.level = level || 'info';
    this.logentries = new logentries.logger({
      token: token,
      levels: levels,
      secure: secure
    });
    this.logentries.level(this.level);
  }

  Logentries.prototype.log = function(level, msg, meta, callback) {
    var data;
    if (meta != null) {
      meta = JSON.stringify(meta);
      meta = meta === '{}' ? '' : " " + meta;
    }
    data = msg + meta;
    this.logentries.log(level, data);
    return callback(null, true);
  };

  return Logentries;

})(winston.Transport);

winston.transports.Logentries = Logentries;

module.exports = {
  Logentries: Logentries
};
